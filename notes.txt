Aula 01 ---------- start

Rest API Node.js & MongoDB

Node.js = Interpretador javascript
npm = Gerenciador de pacotes Node.js

Prompt de comando:
npm --version
node --version

Aula 01 ---------- end


Aula 02 ---------- start

Criar o diretório do projeto: Evitar nomes grandes e caracteres especiais

Prompt de comando:
ls mostra os itens do diret�rio
clear limpa
mkdir cria pasta

inicializar a aplica��o do Node.js

npm init -y

* -y é para responder yes para todas as perguntas

vai ser criado o aquivo package.json

No visual studio deve-se criar o servidor web e adicionar uma porta para ele

'use strict'  faz o javascript ser mais criterioso na validação do código

node .\server.js para testar no terminal

somente com o node não poss�vel criar um servidor http
deve-se instalar 2 pacotes e 1 pacote para debugar

npm install http express debug --save

sera criada a pasta node_modules a mesma mdeve ser adicionada no arquivo .gitignore

no package.json será criada as dependecies do projeto e quando a pessoa receber o projeto
ela deva utilizar o comando npm install sera verificado as dependecies e instalado automaticamnte

Aula 02 ---------- end



Aula 03 ---------- start

Criar o servidor web

debug para debugar o projeto
express MVC
http servidor http recebe e responde requisições

deve-se importar os 3 pacotes

para importar deve-se usar require nome = require('pacote');
o nome do pacote direto procura em node_modules
para pegar outros arquivos deve-se usar './pasta/arquivo'

Ap�s importar os pacotes e criar os mesmos, deve-se testar a API
node .\server.js

Deve-se também testar no Postman GET http://localhost:3000

Aula 03 ---------- end


Aula 04 ---------- start

Criar uma função para identificar uma porta disponível

const port = normalizePort(process.env.PORT || '3000');
A função verifica se existe alguma porta, caso não exista determina a 3000

Aula 04 ---------- end


Aula 05 ---------- start

Criar uma função para identificar erros

Ao tentar por exemplo rodar a API duas vezes vai aparecer que a porta 3000 ja esta em uso

Aula 05 ---------- end


Aula 06 ---------- start

Inicializar o Debug

Aula 06 ---------- end


Aula 07 ---------- start

Não é interessante trabalhar servidor, API, rotas ... tudo no mesmo arquivo

Criar uma nova pasta na raiz da aplicação bin e dentro dela criar o arquivo server.js

Criar uma nova pasta src e criar o arquivo app.js

Terminado as modificações deve-se excluir o arquivo server.js antigo

Desta forma separa o servidor da aplicação

Aula 07 ---------- start



